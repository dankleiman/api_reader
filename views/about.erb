<h2>About API Reader</h2>

<h3>Using API Reader</h3>

<div class="about">
  <p>First, enter a JSON object to search.</p>

  <p>Then enter a search value.</p>

  <p>You will get back a series the brackets (keys and indices) that you need to referrence the search value in your code.</p>

  <p>If there is more than one occurrence of the value in the data structure (including key names), you will get a multiline return. Each line of the search results is a different reference path.</p>

  <h3>Possible Uses</h3>

  You can use the results of the search to:
  <ol>
    <li>Directly reference a value inside of your code.</li>
    <li>Simplify the nested structure of your data.</li>
    <li>Guess and check - practice your JSON reading skills: figure out the path by hand first, then run this app to confirm.</li>
  </ol>

  <h3>Background</h3>

  <p>As Junior Developers, we set out to learn about compound data structures.</p>

  <p>Quickly, we encountered hashes and arrays, and hashes inside arrays...inside of hashes and arrays of hashes with more hashes and arrays inside of them.</p>

  <p>When you want to identify a specific value inside of these compound structures, your head starts to spin as you keep track of all the nested keys and indexes.</p>

  <p>Bascially, we wanted to create an easier way to get the "path" of any value inside a compound data structure, so we could reference it in our code.</p>

  <h3>Problem Statement and Our Approach to Solving</h3>

  <p><strong>Problem:</strong> Given a value and a compound data structure, return the position in the strucure, formatted so you can referrence it in your code.</p>

  <p><strong>Solution:</strong> To find the value in the data structure you need to:</p>
  <ol>
    <li>Traverse an array of hashes, potentially with nested arrays and/or hashes.</li>
    <li>Test each element of the structure against the value you're searching for.</li>
    <li>Keep track of the path through the structure.</li>
  </ol>

  <p>We are in the process of refining the power of the search to work for all possible search values, including the keys of the nested hashes. Stay tuned!</p>

  <a href="https://github.com/dankleiman/path_finder">Here is the original repo on which this app is based.</a>
</div>

